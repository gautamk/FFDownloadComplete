#!/usr/bin/python
import wsgiref.handlers
import os
import python.models
from google.appengine.ext import webapp
from google.appengine.api import users
from google.appengine.ext.webapp import template
from google.appengine.ext import db
from google.appengine.api import mail
from time import localtime, strftime

class MainPage(webapp.RequestHandler):
	def get(self):
		user = users.get_current_user()
		SecretKey=db.GqlQuery("SELECT * FROM UserDB WHERE name=:current_user  ",current_user=user)
		if(SecretKey.count() == 1):
			SecretKey=SecretKey.get()
			SecretKey=SecretKey.secret_key
			documentReadyDo=""
		else :
			SecretKey=""
			documentReadyDo="""alert('You have not Registered \\n Please Go to options and Register before using this application');"""
		
		template_values = {
				'logoutUrl':users.create_logout_url("/") ,
				'userName': user,
				'userEmail': user.email() , 
				'SecretKey' : SecretKey ,
				'documentReadyDo' : documentReadyDo , 
				}

		path = os.path.join(
							os.path.split( 	os.path.dirname(__file__) ) [0] , 
							'html/template.html' )
		#self.response.out.write(path)
		self.response.out.write(template.render(path, template_values))

class MailingPage(webapp.RequestHandler):
	def get(self):
		self.response.out.write('Mailing Page Send a Post Request Please')
	
	def post(self):
		SecretKey = self.request.get('SecretKey')
		
		query=db.GqlQuery("SELECT * FROM UserDB WHERE secret_key=:secret_key  ",secret_key=SecretKey)

		if(query.count() == 1):
			query=query.get()
			
			sender_address = query.name.email()
			user_address = query.to_send_email

			subject = "Download Completed  @ " + strftime("%a, %d %b %Y %H:%M:%S +0000", localtime())
			body = """
			This is an automated message generated by http://ffdownloadcomplete.appspot.com
			
			The Server Time was : %(server)s

			The Server received the Following message :
				%(client)s

			""" %{'client' : self.request.get('description') , 'server' : strftime( "%a, %d %b %Y %H:%M:%S +0000", localtime() ) }
			mail.send_mail(sender_address, user_address, subject, body)
			self.response.out.write('Mail Success Fully Sent')
		else :
			self.response.out.write('Error : Too many or Too less matches to Secret Key ')


def main():
	app = webapp.WSGIApplication(
			[
				('/*',MainPage ),
				('/Mail',MailingPage)
				],debug=True)
	wsgiref.handlers.CGIHandler().run(app)

if __name__ == "__main__":
	main()

